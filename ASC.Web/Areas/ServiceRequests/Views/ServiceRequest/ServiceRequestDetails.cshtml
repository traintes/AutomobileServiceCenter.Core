@using Microsoft.AspNetCore.Http
@using ASC.Models.BaseTypes
@inject IHttpContextAccessor UserHttpContext
@model ASC.Web.Areas.ServiceRequests.Models.ServiceRequestDetailViewModel
@{
    Layout = "_SecureLayout";
}

@{
    // Compute Service Engineer and Status Disable logic
    string serviceEngineerDisabled = null;
    if (!this.UserHttpContext.HttpContext.User.IsInRole(Roles.Admin.ToString()))
    {
        serviceEngineerDisabled = "disabled";
    }

    string statusDisabled = null;
    if (!this.UserHttpContext.HttpContext.User.IsInRole(Roles.Admin.ToString()) &&
        !this.UserHttpContext.HttpContext.User.IsInRole(Roles.Engineer.ToString()))
    {
        statusDisabled = "disabled";
    }

    // Customer can update the status only if the original status is Customer pending approval
    if (this.UserHttpContext.HttpContext.User.IsInRole(Roles.User.ToString()) &&
        Model.ServiceRequest.Status == Status.PendingCustomerApproval.ToString())
    {
        statusDisabled = null;
        ViewBag.Status = new List<string> { "Completed", "RequestForInformation" };
    }
}

<div class="row"></div>
<div class="row padding-top-20px">
    <!-- Details Section -->
    <div class="row z-depth-3">
        <div class="col s12 padding-0px">
            <div class="section white-text padding-left-10px blue-grey lighten-1">
                <h5>Service Request Details</h5>
            </div>
            <div class="divider"></div>
            <form asp-controller="ServiceRequest" asp-action="UpdateServiceRequestDetails" method="post"
                  class="col s12">
                <input asp-for="ServiceRequest.RowKey" type="hidden" />
                <input asp-for="ServiceRequest.PartitionKey" type="hidden" />
                <input asp-for="ServiceRequest.RequestedDate" type="hidden" />
                <div class="row">
                    <div class="input-field col s4">
                        <select asp-for="ServiceRequest.VehicleName" class="validate" required="required"
                                asp-items="@(new SelectList(ViewBag.VehicleNames, "RowKey", "Name"))" disabled>
                            <option value="">Please select one</option>
                        </select>
                        <label asp-for="ServiceRequest.VehicleName"></label>
                    </div>
                    <div class="input-field col s4">
                        <select asp-for="ServiceRequest.VehicleType" class="validate" required="required"
                                asp-items="@(new SelectList(ViewBag.VehicleTypes, "RowKey", "Name"))" disabled>
                            <option value="">Please select one</option>
                        </select>
                        <label asp-for="ServiceRequest.VehicleType"></label>
                    </div>
                    <div class="input-field col s4">
                        <input asp-for="ServiceRequest.RequestedDate" type="text" disabled="disabled"
                               class="datepicker" />
                        <label asp-for="ServiceRequest.RequestedDate"></label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s8">
                        <textarea asp-for="ServiceRequest.RequestedServices"
                                  class="materialize-textarea validate"></textarea>
                        <label asp-for="ServiceRequest.RequestedServices"></label>
                    </div>
                </div>

                <div class="row">
                    <div class="input-field col s4">
                        <select asp-for="ServiceRequest.ServiceEngineer" required="required"
                                asp-items="@(new SelectList(ViewBag.ServiceEngineers, "Email", "Email"))"
                                disabled=@serviceEngineerDisabled>
                            <option value="">Please select one</option>
                        </select>
                        <label asp-for="ServiceRequest.ServiceEngineer"></label>
                    </div>
                    <div class="input-field col s4">
                        <select asp-for="ServiceRequest.Status" asp-items="@(new SelectList(ViewBag.Status))"
                                class="validate" required="required" disabled=@statusDisabled>
                            <option value="">Please select one</option>
                        </select>
                        <label asp-for="ServiceRequest.Status"></label>
                    </div>
                    <div class="input-field col s12 right-align">
                        <button class="btn waves-effect waves-light btnSubmit" type="submit" name="action">
                            Update <i class="material-icons right">send</i>
                        </button>
                    </div>
                    <div asp-validation-summary="All" class="row col s12 right-align"></div>
                </div>
            </form>
        </div>
        <div class="row"></div>
    </div>

    @await Html.PartialAsync("_ServiceRequestGrid", Model.ServiceRequestAudit,
        new ViewDataDictionary(ViewData)
        {
            { "SectionName", "Recent Updates" },
            { "Id", "tblAuditServiceRequests" },
            { "IsAudit", true },
        })

    <!-- Messages Section -->
    <input id="hdnCustomerEmail" value="@Model.ServiceRequest.PartitionKey" type="hidden" />
    <div class="row">
        <div class="col s8">
            <ul class="collection with-header">
                <li class="row collection-header">
                    <div class="col s6">
                        <h5>Service Request Messages</h5>
                    </div>
                    <div class="col s6 padding-top-10px right">
                        <div class="col chip right">
                            User <img src="~/images/red_dot.png" data-id="isCu" />
                        </div>
                        <div class="col chip right">
                            Admin <img src="~/images/red_dot.png" data-id="isAd" />
                        </div>
                        <div class="col chip right">
                            Engineer <img src="~/images/red_dot.png" data-id="isSe" />
                        </div>
                    </div>
                </li>
                <li class="collection-item height-300px overflow-y messages">
                    <ul id="messagesList"></ul>
                    <div class="card-panel teal lighten-2 white-text noMessages hide">
                        No Messages.
                    </div>
                </li>
            </ul>
            <div class="input-field col s12">
                <input id="txtMessage" type="text" />
                <label for="txtMessage">Type message here and press enter.</label>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable to show list of Service Requests
            var table = $('.tblServiceRequests').DataTable({
                'pageLength': 3,
                // Number of records to be displayed per page
                'lengthMenu': [[3, 5, 10, -1], [3, 5, 10, 'All']],
                // Remove default Sorting
                'sorting': [],
                'columns': [
                    { 'visible': false },
                    { 'visible': false },
                    null,
                    { 'width': '20%' },
                    null,
                    null,
                    null,
                    { 'visible': false },
                ],
            });

            // Set Styles for DataTable and Number of Records to be displayed dropdown
            $('.tblServiceRequests').css('width', '100%');
            $('select[name$="ServiceRequests_length"]').material_select();

            // Initialize DatePicker
            $('.datepicker').pickadate({
                selectMonths: true,
                selectYears: 15,
            });

            // Initialize Material Select
            $('select').material_select();
            $('select[required]').css({
                display: 'block',
                position: 'absolute',
                visibility: 'hidden',
            });

            // Need to pass Verification Token to get Request Validated for Forgery
            var token = $('input[type=hidden][name=__RequestVerificationToken]', document).val();
            $.ajaxSetup({
                // Disable caching of AJAX responses
                cache: false,
                headers: {
                    'RequestVerificationToken': token,
                    'ServiceRequestId': $('#ServiceRequest_RowKey').val(),
                }
            });

            // Get all previous messages for the service request
            $.get('/ServiceRequests/ServiceRequest/ServiceRequestMessages?serviceRequestId=' +
                $('#ServiceRequest_RowKey').val(), function (data, status) {
                    addMessagesToList(data);
                });

            // Function to scroll the messages panel to latest message
            function scrollToLatestMessages() {
                $('.messages').animate({ scrollTop: 10000 }, 'normal');
            }

            // Functon whichis used to list of messages to UI
            function addMessagesToList(messages) {
                if (messages.length === 0) {
                    $('.noMessages').removeClass('hide');
                }

                $.each(messages, function (index) {
                    var message = messages[index];
                    displayMessage(message);
                });

                scrollToLatestMessages();
            };

            // Function which is invoked by SignalR Hub when a new message is broadcasted
            function addMessage(message) {
                if (message.PartitionKey !== $('#ServiceRequest_RowKey').val()) {
                    return;
                }

                if (message !== null) {
                    $('.noMessage').addClass('hide');
                }
                displayMessage(message);
                scrollToLatestMessages();
            };

            // Function used to display message on UI
            function displayMessage(message) {
                var isCustomer = $('#hdnCustomerEmail').val() === message.FromEmail ?
                    'blue lighten-1' : 'teal lighten-2';

                $('#messagesList').append(
                    '<li class="card-panel ' + isCustomer + ' white-text padding-10px">' +
                        '<div class="col s12 padding-0px">' +
                            '<div class="col s8 padding-0px">' +
                                '<b>' + message.FromDisplayName + '</b>' +
                            '</div>' +
                            '<div class="col s4 padding-0px font-size-12px right-align">' +
                                (new Date(message.MessageDate)).toLocaleString() +
                            '</div>' +
                        '</div><br>' +
                        message.Message +
                    '</li>'
                );
            };

            // Get the proxy of SignalR Hub and associate client side function
            $.connection.serviceMessagesHub.client.publishMessage = addMessage;
            $.connection.serviceMessagesHub.client.online = updateUserStatus;

            // Function which will toggle the status of online/offline of users.
            function updateUserStatus(data) {
                $('div.chip img[data-id="isAd"]').attr('src', data.isAd ?
                    '/images/green_dot.png' : '/images/red_dot.png');
                $('div.chip img[data-id="isCu"]').attr('src', data.isCu ?
                    '/images/green_dot.png' : '/images/red_dot.png');
                $('div.chip img[data-id="isSe"]').attr('src', data.isSe ?
                    '/images/green_dot.png' : '/images/red_dot.png');
            }

            // Unload function to make sure the user is marked as offline.
            $(window).unload(function () {
                $.get('/ServiceRequests/ServiceRequest/MarkOfflineUser', function (data, status) { });
            });

            // Function used to post message to server on keypress
            $('#txtMessage').keypress(function (e) {
                var key = e.which;
                if (key == 13) {
                    var message = new Object();
                    message.Message = $('#txtMessage').val();
                    message.PartitionKey = $('#ServiceRequest_RowKey').val();

                    $.post('/ServiceRequests/ServiceRequest/CreateServiceRequestMessage',
                        { message: message },
                        function (data, status, xhr) {
                            if (data) {
                                $('.noMessages').addClass('hide');
                                $('#txtMessage').val('');
                            }
                        });
                    scrollToLatestMessages();
                }
            });
        });
    </script>
}
